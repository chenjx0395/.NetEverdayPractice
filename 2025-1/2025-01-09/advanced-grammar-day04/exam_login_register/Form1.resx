<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        3ElKVSoIcQyJHussxQjQH2UUQ0Qd2f/Z
</value>
  </data>
</root>